<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="7989acd2-40e1-4bae-9386-bf3cc6fd39da" name="Dego@NASA 2015-05-31 02:59:50" runUser="Nasa\Dego" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Локальные" id="b9f55fb9-f132-4cfc-bd35-473d24199fde">
    <Description>Это - параметры по умолчанию для локального тестового запуска.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Dego_NASA 2015-05-31 02_59_50" />
  </TestSettings>
  <Times creation="2015-05-31T02:59:50.7622891+03:00" queuing="2015-05-31T02:59:51.8773528+03:00" start="2015-05-31T02:59:52.0323617+03:00" finish="2015-05-31T03:00:29.1934872+03:00" />
  <ResultSummary outcome="Aborted">
    <Counters total="1" executed="1" error="0" failed="0" timeout="0" aborted="1" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest" storage="c:\users\dego\documents\visual studio 2012\projects\smarthome\webandloadtestproject\webtest.webtest" id="625ff0e2-4dee-405b-aa04-7bf6681efb45" persistedWebTest="">
    </WebTest>
    <LoadTest Name="LoadTest1" Description="" Owner="" storage="c:\users\dego\documents\visual studio 2012\projects\smarthome\webandloadtestproject\loadtest1.loadtest" Priority="2147483647" Enabled="true" CssProjectStructure="" CssIteration="" DeploymentItemsEditable="" WorkItemIds="" TraceLevel="None" CurrentRunConfig="Параметры запуска1" Id="d12a787c-0e73-40dc-9051-e1ba7932c6ca">
      <Scenarios>
        <Scenario Name="Сценарій" DelayBetweenIterations="1" PercentNewUsers="0" IPSwitching="true" TestMixType="PercentageOfTestsStarted" ApplyDistributionToPacingDelay="true" MaxTestIterations="0" DisableDuringWarmup="false" DelayStartTime="0" AllowedAgents="">
          <ThinkProfile Value="0.2" Pattern="NormalDistribution" />
          <LoadProfile Pattern="Constant" InitialUsers="100" />
          <TestMix>
            <TestProfile Name="WebTest" Path="c:\users\dego\documents\visual studio 2012\projects\smarthome\webandloadtestproject\webtest.webtest" Id="625ff0e2-4dee-405b-aa04-7bf6681efb45" Percentage="100" Type="Microsoft.VisualStudio.TestTools.WebStress.DeclarativeWebTestElement, Microsoft.VisualStudio.QualityTools.LoadTest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
          </TestMix>
          <BrowserMix>
            <BrowserProfile Percentage="100">
              <Browser Name="Chrome 2" MaxConnections="6">
                <Headers>
                  <Header Name="User-Agent" Value="Mozilla/5.0 (Windows; U; Windows NT 5.1;) AppleWebKit/530.1 (KHTML, like Gecko) Chrome/2.0.169.1 Safari/530.1" />
                  <Header Name="Accept" Value="*/*" />
                  <Header Name="Accept-Language" Value="{{$IEAcceptLanguage}}" />
                  <Header Name="Accept-Encoding" Value="gzip,deflate" />
                  <Header Name="Accept-Charset" Value="ISO-8859-1,*,utf-8" />
                </Headers>
              </Browser>
            </BrowserProfile>
          </BrowserMix>
          <NetworkMix>
            <NetworkProfile Percentage="100">
              <Network Name="LAN" BandwidthInKbps="1000000" NetworkProfileConfigurationXml="&lt;Emulation&gt;&lt;VirtualChannel name=&quot;defaultChannel&quot;&gt;&lt;FilterList/&gt;&lt;VirtualLink instances=&quot;1&quot; name=&quot;defaultLink&quot;&gt;&lt;LinkRule dir=&quot;upstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;LinkRule dir=&quot;downstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;/VirtualLink&gt;&lt;/VirtualChannel&gt;&lt;/Emulation&gt;" />
            </NetworkProfile>
          </NetworkMix>
        </Scenario>
      </Scenarios>
      <CounterSets>
        <CounterSet Name="NASA" CounterSetType="LoadTest" LocId="">
          <CounterCategories>
            <CounterCategory Name="LoadTest:Scenario">
              <Counters>
                <Counter Name="User Load" HigherIsBetter="true" />
                <Counter Name="Tests Running" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Test">
              <Counters>
                <Counter Name="Total Tests" HigherIsBetter="true" />
                <Counter Name="Passed Tests" HigherIsBetter="true" />
                <Counter Name="Failed Tests" />
                <Counter Name="Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Tests/Sec" />
                <Counter Name="Avg. Requests/Test" HigherIsBetter="true" />
                <Counter Name="Avg. Test Time" />
                <Counter Name="% Time in LoadTestPlugin" />
                <Counter Name="% Time in WebTest code" />
                <Counter Name="% Time in Rules" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Transaction">
              <Counters>
                <Counter Name="Total Transactions" HigherIsBetter="true" />
                <Counter Name="Avg. Transaction Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Transactions/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Errors">
              <Counters>
                <Counter Name="Http Errors" />
                <Counter Name="Validation Rule Errors" />
                <Counter Name="Extraction Rule Errors" />
                <Counter Name="Requests Timed Out" />
                <Counter Name="Exceptions" />
                <Counter Name="Total Errors" />
                <Counter Name="Ошибок в секунду" />
                <Counter Name="Нарушений порога/сек" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Page">
              <Counters>
                <Counter Name="Total Pages" HigherIsBetter="true" />
                <Counter Name="Avg. Page Time" />
                <Counter Name="Page Response Time Goal" HigherIsBetter="true" />
                <Counter Name="% Pages Meeting Goal" HigherIsBetter="true" />
                <Counter Name="Pages/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Request">
              <Counters>
                <Counter Name="Total Requests" HigherIsBetter="true" />
                <Counter Name="Passed Requests" HigherIsBetter="true" />
                <Counter Name="Failed Requests" />
                <Counter Name="Cached Requests" HigherIsBetter="true" />
                <Counter Name="Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Requests/Sec" />
                <Counter Name="Avg. First Byte Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Avg. Connection Wait Time">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="LoadTest:Page" />
                        <RuleParameter Name="DependentCounter" Value="Avg. Page Time" />
                        <RuleParameter Name="DependentInstance" Value="_Total" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.25" />
                        <RuleParameter Name="CriticalThreshold" Value="0.5" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Content Length" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:LogEntries">
              <Counters>
                <Counter Name="Total Log Entries" />
                <Counter Name="Log Entries/Sec" />
              </Counters>
            </CounterCategory>
          </CounterCategories>
        </CounterSet>
        <CounterSet Name="Контроллер" CounterSetType="Controller" LocId="CounterSet_Controller">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="QTController" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
        <CounterSet Name="Агент" CounterSetType="Agent" LocId="CounterSet_Agent">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="0" />
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="devenv" />
                <Instance Name="QTAgentService" />
                <Instance Name="QTAgent" />
                <Instance Name="QTAgent32" />
                <Instance Name="QTDCAgent" />
                <Instance Name="QTDCAgent32" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="0" GraphName="" RunType="Local" />
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" RunType="Remote" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
      </CounterSets>
      <RunConfigurations>
        <RunConfiguration Name="Параметры запуска1" Description="" ResultsStoreType="Database" TimingDetailsStorage="AllIndividualDetails" SaveTestLogsOnError="true" SaveTestLogsFrequency="0" MaxErrorDetails="200" MaxErrorsPerType="1000" MaxThresholdViolations="1000" MaxRequestUrlsReported="1000" UseTestIterations="false" RunDuration="120" WarmupTime="0" CoolDownTime="0" TestIterations="100" WebTestConnectionModel="ConnectionPerUser" WebTestConnectionPoolSize="50" SampleRate="5" ValidationLevel="Medium" SqlTracingConnectString="" SqlTracingConnectStringDisplayValue="" SqlTracingDirectory="" SqlTracingEnabled="false" SqlTracingFileCount="2" SqlTracingRolloverEnabled="true" SqlTracingMinimumDuration="500" RunUnitTestsInAppDomain="true">
          <CounterSetMappings>
            <CounterSetMapping ComputerName="[CONTROLLER MACHINE]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="LoadTest" />
                <CounterSetReference CounterSetName="Контроллер" />
              </CounterSetReferences>
            </CounterSetMapping>
            <CounterSetMapping ComputerName="[AGENT MACHINES]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="Агент" />
              </CounterSetReferences>
            </CounterSetMapping>
          </CounterSetMappings>
        </RunConfiguration>
      </RunConfigurations>
    </LoadTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Отсутствующие в списке результаты" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Все загруженные результаты" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="d12a787c-0e73-40dc-9051-e1ba7932c6ca" executionId="282873c4-8c52-4b2a-a0d5-5bf46ac95bce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d">
      <TestEntries>
        <TestEntry isTransparent="false" testId="625ff0e2-4dee-405b-aa04-7bf6681efb45" executionId="c6b35c51-4c2f-4172-b5d4-e295d3545f42" parentExecutionId="282873c4-8c52-4b2a-a0d5-5bf46ac95bce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
      </TestEntries>
    </TestEntry>
  </TestEntries>
  <Results>
    <LoadTestResult executionId="282873c4-8c52-4b2a-a0d5-5bf46ac95bce" testId="d12a787c-0e73-40dc-9051-e1ba7932c6ca" testName="LoadTest1" computerName="NASA" duration="00:00:25.3644508" startTime="2015-05-31T02:59:56.6356250+03:00" endTime="2015-05-31T03:00:22.0000758+03:00" testType="fa4c85ff-1236-4463-b954-3ba2f0eabd95" outcome="Aborted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="282873c4-8c52-4b2a-a0d5-5bf46ac95bce" runId="2" controllerStartTime="2015-05-31T02:59:56.6356250+03:00" runStatus="Stopped" resultsStoreType="Database" resultsRepositoryConnectString="LAs4ogoKlDdhmQb5z0op1CRxlxlrNaZ3iClnx9q8/VMDUnRQXv5Lk8/dLDADVBEBZ+Ym/QgEA/eTF14DETFVDIgtwvBWpHCKf53dWjVHx85jzvJW9gNc4w==" loadTestDuration="120" loadTestWarmupTime="0" previouslyViewed="true">
      <AnalyzerViewState>
        <LoadTestRunDescriptor isLegendPanelVisible="true" isOverviewPanelVisible="true" isCounterPanelVisible="true" scrollingGraph="false" minMaxGraph="false" showHorizontalGridOnGraph="true" showThresholdsOnGraph="true" showComparison="false" showZoom="true" lockZoom="true" activeConsoleView="Graph" selectedGraphPanel1="Ключевые индикаторы" selectedGraphPanel2="Время ответа страницы" selectedGraphPanel3="Тестируемая система" selectedGraphPanel4="Контроллер и агенты" graphPanelLayout="FourGrid" tablePanelLayout="TwoHorizontal" selectedTablePanel1="Tests" selectedTablePanel2="Errors" selectedTablePanel3="Thresholds" selectedTablePanel4="Transactions" controllerName="NASA" isLocalRun="true" testRunId="7989acd2-40e1-4bae-9386-bf3cc6fd39da" repositoryRunId="0">
          <GraphDescriptors>
            <GraphDescriptor graphName="Ключевые индикаторы">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="0" rangeGroup="User Load" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Scenario" counterName="User Load" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="0" rangeGroup="Pages/Sec" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Page" counterName="Pages/Sec" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="0" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-8388480" lineStyle="0" fixedRange="0" rangeGroup="Ошибок в секунду" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Errors" counterName="Ошибок в секунду" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-23296" lineStyle="0" fixedRange="0" rangeGroup="Нарушений порога/сек" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Errors" counterName="Нарушений порога/сек" instanceName="_Total" baseInstanceName="_Total" loadTestItemId="-1" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="Тестируемая система">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
            </GraphDescriptor>
            <GraphDescriptor graphName="Контроллер и агенты">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="100" rangeGroup="% Processor Time" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="Processor" counterName="% Processor Time" instanceName="0" baseInstanceName="0" loadTestItemId="-1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="0" rangeGroup="Memory Bytes" showOnGraph="true" isSelected="false">
                  <CounterDescriptor machineName="NASA" categoryName="Memory" counterName="Available MBytes" instanceName="systemdiagnosticsperfcounterlibsingleinstance" baseInstanceName="systemdiagnosticsperfcounterlibsingleinstance" loadTestItemId="-1" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="Время ответа теста">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="0" rangeGroup="Avg. Test Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest;Сценарій">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="WebTest(000)" baseInstanceName="WebTest" loadTestItemId="0" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
            <GraphDescriptor graphName="Время ответа транзакции">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="100" />
            </GraphDescriptor>
            <GraphDescriptor graphName="Время ответа страницы">
              <HorizontalZoomRange lower="-1" upper="-1" />
              <VerticalZoomRange lower="0" upper="15" />
              <PlotDescriptors>
                <PlotDescriptor colorArgb="-65536" lineStyle="0" fixedRange="15" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest;Сценарій;http://localhost:2185/----{GET}">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="localhost:2185{GET}(002)" baseInstanceName="localhost:2185{GET}" loadTestItemId="2" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16744448" lineStyle="0" fixedRange="15" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="false" counterMetadata="WebTest;Сценарій;http://localhost:2185/Home/List----{GET}">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="List{GET}(001)" baseInstanceName="List{GET}" loadTestItemId="1" />
                </PlotDescriptor>
                <PlotDescriptor colorArgb="-16776961" lineStyle="0" fixedRange="15" rangeGroup="Avg. Page Time" showOnGraph="true" isSelected="true" counterMetadata="WebTest;Сценарій;http://localhost:2185/Home/DeviceActionLamp----{POST}">
                  <CounterDescriptor machineName="NASA" categoryName="LoadTest:Page" counterName="Avg. Page Time" instanceName="DeviceActionLamp{POST}(012)" baseInstanceName="DeviceActionLamp{POST}" loadTestItemId="12" />
                </PlotDescriptor>
              </PlotDescriptors>
            </GraphDescriptor>
          </GraphDescriptors>
        </LoadTestRunDescriptor>
      </AnalyzerViewState>
      <Summary>
        <PerformanceCounterResults>
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Scenario" counterName="User Load" instanceName="_Total" value="100" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Test" counterName="Total Tests" instanceName="_Total" value="0" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="NASA" categoryName="LoadTest:Test" counterName="Failed Tests" instanceName="_Total" value="0" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Test" counterName="Tests/Sec" instanceName="_Total" value="0" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="NASA" categoryName="LoadTest:Test" counterName="Avg. Test Time" instanceName="_Total" value="0" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Request" counterName="Total Requests" instanceName="_Total" value="1074" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="NASA" categoryName="LoadTest:Request" counterName="Failed Requests" instanceName="_Total" value="23" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Request" counterName="Cached Requests" instanceName="_Total" value="104" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="true" machineName="NASA" categoryName="LoadTest:Request" counterName="Requests/Sec" instanceName="_Total" value="42.96" />
          <PerformanceCounterResult isOverallResultCounter="true" higherIsBetter="false" machineName="NASA" categoryName="LoadTest:Request" counterName="Avg. Response Time" instanceName="_Total" value="3.651691" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Processor" counterName="% Processor Time" instanceName="_Total" value="82.12866" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="true" machineName="NASA" categoryName="Memory" counterName="Available MBytes" instanceName="-" value="193" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="сетевая карта realtek rtl8168d_8111d family pci-e gigabit ethernet nic [ndis 6.20]" value="412.6708" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="подключение по локальной сети* 2" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Received/sec" instanceName="isatap.{bee2fa93-2ac2-4bae-8ee6-032ef765795b}" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="сетевая карта realtek rtl8168d_8111d family pci-e gigabit ethernet nic [ndis 6.20]" value="381.885132" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="подключение по локальной сети* 2" value="0" />
          <PerformanceCounterResult isOverallResultCounter="false" higherIsBetter="false" machineName="NASA" categoryName="Network Interface" counterName="Bytes Sent/sec" instanceName="isatap.{bee2fa93-2ac2-4bae-8ee6-032ef765795b}" value="0" />
        </PerformanceCounterResults>
        <PageSummaries>
          <PageSummary scenarioName="Сценарій" testName="WebTest" url="localhost:2185/{GET}" pageCount="100" responseTime="1078" />
          <PageSummary scenarioName="Сценарій" testName="WebTest" url="List{GET}" pageCount="43" responseTime="7698" />
          <PageSummary scenarioName="Сценарій" testName="WebTest" url="DeviceActionLamp{POST}" pageCount="23" responseTime="7898" />
        </PageSummaries>
        <TestSummaries>
          <TestSummary scenarioName="Сценарій" testName="WebTest" totalTests="0" testsFailed="0" averageDuration="0" />
        </TestSummaries>
      </Summary>
    </LoadTestResult>
  </Results>
</TestRun>